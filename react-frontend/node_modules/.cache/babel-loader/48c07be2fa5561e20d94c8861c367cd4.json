{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/Documentos/controle-aplica\\xE7\\xF5es-financeiras/react-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    //Fetch Tasks\n    const fetchTasks = async () => {\n      const res = await fetch(`/negocios?arquivo=/home/marcelo/Documentos/controle-aplica%C3%A7%C3%B5es-financeiras/content/nota-xp-lygia.pdf&senha=011`);\n      const data = await res.json();\n      console.log(data);\n      setTasks(data);\n    };\n\n    fetchTasks();\n  }, []); // //Delete Task\n  // const deleteTask = async (id) => {\n  //   await fetch()\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n  //Toggle Reminder\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; //Add Task\n\n\n  const addTask = task => {\n    let id;\n\n    try {\n      if (tasks.length !== 0) {\n        id = tasks[tasks.length - 1].id + 1;\n      } else {\n        id = 1;\n      }\n    } catch (e) {\n      id = 1;\n    } // const ide = (() =>\n    //   tasks.lenght === 0 ? 1 : tasks[tasks.length - 1].id + 1)();\n\n\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // return <div>teste</div>;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks[\"Nota 1\"].corretora\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marcelo/Documentos/controle-aplicações-financeiras/react-frontend/src/App.js"],"names":["useState","useEffect","App","tasks","setTasks","fetchTasks","res","fetch","data","json","console","log","toggleReminder","id","map","task","reminder","addTask","length","e","newTask","corretora"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMI,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,0HADoB,CAAvB;AAGA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,KAPD;;AAQAH,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT,CAHgB,CAgBhB;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMO,cAAc,GAAIC,EAAD,IAAQ;AAC7BT,IAAAA,QAAQ,CACND,KAAK,CAACW,GAAN,CAAWC,IAAD,IACRA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGE,IAAL;AAAWC,MAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAA3B,KAAjB,GAAyDD,IAD3D,CADM,CAAR;AAKD,GAND,CAtBgB,CA8BhB;;;AACA,QAAME,OAAO,GAAIF,IAAD,IAAU;AACxB,QAAIF,EAAJ;;AACA,QAAI;AACF,UAAIV,KAAK,CAACe,MAAN,KAAiB,CAArB,EAAwB;AACtBL,QAAAA,EAAE,GAAGV,KAAK,CAACA,KAAK,CAACe,MAAN,GAAe,CAAhB,CAAL,CAAwBL,EAAxB,GAA6B,CAAlC;AACD,OAFD,MAEO;AACLA,QAAAA,EAAE,GAAG,CAAL;AACD;AACF,KAND,CAME,OAAOM,CAAP,EAAU;AACVN,MAAAA,EAAE,GAAG,CAAL;AACD,KAVuB,CAWxB;AACA;;;AACA,UAAMO,OAAO,GAAG;AAAEP,MAAAA,EAAF;AAAM,SAAGE;AAAT,KAAhB;AAEAX,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWiB,OAAX,CAAD,CAAR;AACD,GAhBD,CA/BgB,CAgDhB;;;AACA,sBAAO;AAAA,cAAMjB,KAAK,CAAC,QAAD,CAAL,CAAgBkB;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlDD;;GAAMnB,G;;KAAAA,G;AAoDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    //Fetch Tasks\n    const fetchTasks = async () => {\n      const res = await fetch(\n        `/negocios?arquivo=/home/marcelo/Documentos/controle-aplica%C3%A7%C3%B5es-financeiras/content/nota-xp-lygia.pdf&senha=011`\n      );\n      const data = await res.json();\n      console.log(data);\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n\n  // //Delete Task\n  // const deleteTask = async (id) => {\n  //   await fetch()\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  //Add Task\n  const addTask = (task) => {\n    let id;\n    try {\n      if (tasks.length !== 0) {\n        id = tasks[tasks.length - 1].id + 1;\n      } else {\n        id = 1;\n      }\n    } catch (e) {\n      id = 1;\n    }\n    // const ide = (() =>\n    //   tasks.lenght === 0 ? 1 : tasks[tasks.length - 1].id + 1)();\n    const newTask = { id, ...task };\n\n    setTasks([...tasks, newTask]);\n  };\n  // return <div>teste</div>;\n  return <div>{tasks[\"Nota 1\"].corretora}</div>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}