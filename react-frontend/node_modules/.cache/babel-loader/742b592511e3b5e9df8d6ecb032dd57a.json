{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/Documentos/controle-aplica\\xE7\\xF5es-financeiras/react-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Custos from \"./Custos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    //Fetch Tasks\n    const fetchTasks = async () => {\n      const res = await fetch(`/negocios?arquivo=/home/marcelo/Documentos/controle-aplica%C3%A7%C3%B5es-financeiras/content/nota-de-corretagem-clear-multiplas-paginas.pdf&senha=007`);\n      const data = await res.json(); // console.log(data);\n\n      setTasks(data); // return data;\n    };\n\n    fetchTasks();\n  }, []); // //Delete Task\n  // const deleteTask = async (id) => {\n  //   await fetch()\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n  //Toggle Reminder\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; //Add Task\n\n\n  const addTask = task => {\n    let id;\n\n    try {\n      if (tasks.length !== 0) {\n        id = tasks[tasks.length - 1].id + 1;\n      } else {\n        id = 1;\n      }\n    } catch (e) {\n      id = 1;\n    } // const ide = (() =>\n    //   tasks.lenght === 0 ? 1 : tasks[tasks.length - 1].id + 1)();\n\n\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; // return <div>teste</div>;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.length === 0 ? \"Carregando nota...\" : tasks && /*#__PURE__*/_jsxDEV(Custos, {\n      notas: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marcelo/Documentos/controle-aplicações-financeiras/react-frontend/src/App.js"],"names":["useState","useEffect","Custos","App","tasks","setTasks","fetchTasks","res","fetch","data","json","toggleReminder","id","map","task","reminder","addTask","length","e","newTask"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMK,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,uJADoB,CAAvB;AAGA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CAJ6B,CAK7B;;AACAL,MAAAA,QAAQ,CAACI,IAAD,CAAR,CAN6B,CAO7B;AACD,KARD;;AASAH,IAAAA,UAAU;AACX,GAZQ,EAYN,EAZM,CAAT,CAHgB,CAiBhB;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMK,cAAc,GAAIC,EAAD,IAAQ;AAC7BP,IAAAA,QAAQ,CACND,KAAK,CAACS,GAAN,CAAWC,IAAD,IACRA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGE,IAAL;AAAWC,MAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAA3B,KAAjB,GAAyDD,IAD3D,CADM,CAAR;AAKD,GAND,CAvBgB,CA+BhB;;;AACA,QAAME,OAAO,GAAIF,IAAD,IAAU;AACxB,QAAIF,EAAJ;;AACA,QAAI;AACF,UAAIR,KAAK,CAACa,MAAN,KAAiB,CAArB,EAAwB;AACtBL,QAAAA,EAAE,GAAGR,KAAK,CAACA,KAAK,CAACa,MAAN,GAAe,CAAhB,CAAL,CAAwBL,EAAxB,GAA6B,CAAlC;AACD,OAFD,MAEO;AACLA,QAAAA,EAAE,GAAG,CAAL;AACD;AACF,KAND,CAME,OAAOM,CAAP,EAAU;AACVN,MAAAA,EAAE,GAAG,CAAL;AACD,KAVuB,CAWxB;AACA;;;AACA,UAAMO,OAAO,GAAG;AAAEP,MAAAA,EAAF;AAAM,SAAGE;AAAT,KAAhB;AAEAT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;AACD,GAhBD,CAhCgB,CAiDhB;;;AACA,sBACE;AAAA,cACGf,KAAK,CAACa,MAAN,KAAiB,CAAjB,GACG,oBADH,GAEGb,KAAK,iBAAI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA;AAHf;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzDD;;GAAMD,G;;KAAAA,G;AA2DN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Custos from \"./Custos\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    //Fetch Tasks\n    const fetchTasks = async () => {\n      const res = await fetch(\n        `/negocios?arquivo=/home/marcelo/Documentos/controle-aplica%C3%A7%C3%B5es-financeiras/content/nota-de-corretagem-clear-multiplas-paginas.pdf&senha=007`\n      );\n      const data = await res.json();\n      // console.log(data);\n      setTasks(data);\n      // return data;\n    };\n    fetchTasks();\n  }, []);\n\n  // //Delete Task\n  // const deleteTask = async (id) => {\n  //   await fetch()\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  //Add Task\n  const addTask = (task) => {\n    let id;\n    try {\n      if (tasks.length !== 0) {\n        id = tasks[tasks.length - 1].id + 1;\n      } else {\n        id = 1;\n      }\n    } catch (e) {\n      id = 1;\n    }\n    // const ide = (() =>\n    //   tasks.lenght === 0 ? 1 : tasks[tasks.length - 1].id + 1)();\n    const newTask = { id, ...task };\n\n    setTasks([...tasks, newTask]);\n  };\n  // return <div>teste</div>;\n  return (\n    <div>\n      {tasks.length === 0\n        ? \"Carregando nota...\"\n        : tasks && <Custos notas={tasks} />}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}