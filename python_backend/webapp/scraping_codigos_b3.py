# -*- coding: utf-8 -*-
"""Scraping B3 lista ações (old scraping)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12gU6XDMd3CdwICqgXlIf85ol3UaQSJ0X
"""
from time import sleep
import pandas as pd
import json
from webapp.headless_webdriver import get_headless_selenium_webdriver

URL_STOCKS = 'https://sistemaswebb3-listados.b3.com.br/listedCompaniesPage/search?language=pt-br'
URL_BDRS = 'https://sistemaswebb3-listados.b3.com.br/listedCompaniesPage/search?language=pt-br&bdr='
URL_FIIS = 'https://sistemaswebb3-listados.b3.com.br/fundsPage/7'
URL_ETFS = 'https://sistemaswebb3-listados.b3.com.br/fundsPage/20'
WAIT_TIME_QUERY = 1
WAIT_TIME_PAGE = 3

def obter_codigos_b3():
  #STOCKS
  wd = get_headless_selenium_webdriver()
  wd.get(URL_STOCKS)
  sleep(WAIT_TIME_PAGE)
  wd.find_element('id', "nav-table-tab").click()
  sleep(WAIT_TIME_QUERY)
  df = pd.read_html(wd.page_source)[0].drop(['Segmento','Razão Social'], axis=1)
  while True:
    wd.find_element('class name','pagination-next').click()
    sleep(WAIT_TIME_QUERY)
    df_pagina = pd.read_html(wd.page_source)[0].drop(['Segmento','Razão Social'], axis=1)
    print(f"Analisando até o código da ação {df_pagina['Código'].iloc[-1]}")
    if df_pagina['Código'].iloc[-1] == df['Código'].iloc[-1]: break
    df = pd.concat([df, df_pagina]).reset_index().drop('index',axis=1)
  # #BDRs
  #wd.close()
  
  wd.get(URL_BDRS)
  sleep(WAIT_TIME_PAGE)
  wd.find_element('id', "nav-table-tab").click()
  sleep(WAIT_TIME_QUERY)
  while True:
    df_pagina = pd.read_html(wd.page_source)[0].drop(['Segmento','Razão Social','Categoria'], axis=1)
    # print(df_pagina['Código'].iloc[-1], df['Código'].iloc[-1])
    print(f"Analisando até o código do BDR {df_pagina['Código'].iloc[-1]}")
    if df_pagina['Código'].iloc[-1] == df['Código'].iloc[-1]: break
    df = pd.concat([df, df_pagina]).reset_index().drop('index',axis=1)
    wd.find_element('class name','pagination-next').click()
    sleep(WAIT_TIME_QUERY)
  
  #wd.close()
  wd.get(URL_ETFS)
  sleep(WAIT_TIME_PAGE)
  wd.find_element('id', "nav-table-tab").click()
  sleep(WAIT_TIME_QUERY)
  while True:
    df_pagina = pd.read_html(wd.page_source)[0].drop(['Segmento','Razão Social',], axis=1)
    print(f"Analisando até o código do ETF {df_pagina['Código'].iloc[-1]}")
    if df_pagina['Código'].iloc[-1] == df['Código'].iloc[-1]: break
    df_pagina.columns=['Nome de Pregão','Código']
    df = pd.concat([df, df_pagina]).reset_index().drop('index',axis=1)
    wd.find_element('class name','pagination-next').click()
    sleep(WAIT_TIME_QUERY)
    
  #wd.close()
  wd.get(URL_FIIS)
  sleep(WAIT_TIME_PAGE)
  wd.find_element('id', "nav-table-tab").click()
  sleep(WAIT_TIME_QUERY)
  while True:
    df_pagina = pd.read_html(wd.page_source)[0].drop(['Segmento','Razão Social',], axis=1)
    print(f"Analisando até o código do FII {df_pagina['Código'].iloc[-1]}")
    if df_pagina['Código'].iloc[-1] == df['Código'].iloc[-1]: break
    df_pagina.columns=['Nome de Pregão','Código']
    df = pd.concat([df, df_pagina]).reset_index().drop('index',axis=1)
    wd.find_element('class name','pagination-next').click()
    sleep(WAIT_TIME_QUERY)
  wd.close()
    
  df.columns = ['Nome','Codigo']
  df['Nome'] = df['Nome'].apply(lambda x: x.replace(" ",""))
  return df

if __name__ == "__main__":
  # obter_codigos_b3().to_json('codigos_b3.json',orient='values')
  with open ('codigos_b3.json','w') as f:
    json.dump(obter_codigos_b3().set_index('Nome').to_dict(orient='dict'), f)